{"ast":null,"code":"import _defineProperty from \"/Users/maxwellheller/School/SER401/spr-capi-test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/maxwellheller/School/SER401/spr-capi-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellheller/School/SER401/spr-capi-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellheller/School/SER401/spr-capi-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellheller/School/SER401/spr-capi-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellheller/School/SER401/spr-capi-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellheller/School/SER401/spr-capi-test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellheller/School/SER401/spr-capi-test/src/App.js\";\nimport React, { Component } from 'react';\nimport './css/App.css';\nimport model from './model/capiModel';\nimport StudentView from './components/StudentView';\nimport AuthorView from \"./components/AuthorView\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = JSON.parse(JSON.stringify(model));\n    _this.simModel = new window.simcapi.CapiAdapter.CapiModel(_this.state);\n\n    for (var key in _this.state) {\n      if (!_this.state.hasOwnProperty(key)) continue;\n\n      _this.addListener(key);\n\n      window.simcapi.CapiAdapter.expose(key, _this.simModel);\n    }\n\n    window.simcapi.CapiAdapter.unexpose('simObjects');\n    window.simcapi.Transporter.notifyOnReady();\n    _this.increment = _this.increment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addListener\",\n    value: function addListener(keyName) {\n      var _this2 = this;\n\n      this.simModel.on('change:' + keyName, function () {\n        _this2.setState(_defineProperty({}, keyName, _this2.simModel.get(keyName)));\n      });\n    }\n  }, {\n    key: \"increment\",\n    value: function increment(objectName) {\n      var count = this.simModel.get(objectName);\n      this.simModel.set(objectName, count + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //TODO: Add state checking using -> simcapi.Transporter.getConfig().context\n      var display = null;\n\n      if (this.state.studentMode) {\n        display = React.createElement(StudentView, {\n          increment: this.increment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      } else if (this.state.authorMode) {\n        display = React.createElement(AuthorView, {\n          style: {\n            backgroundColor: 'beige'\n          },\n          state: this.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }\n\n      return display;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/maxwellheller/School/SER401/spr-capi-test/src/App.js"],"names":["React","Component","model","StudentView","AuthorView","App","props","state","JSON","parse","stringify","simModel","window","simcapi","CapiAdapter","CapiModel","key","hasOwnProperty","addListener","expose","unexpose","Transporter","notifyOnReady","increment","bind","keyName","on","setState","get","objectName","count","set","display","studentMode","authorMode","backgroundColor"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;IAEMC,G;;;;;AAEF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAf,CAAX,CAAb;AAEA,UAAKS,QAAL,GAAgB,IAAIC,MAAM,CAACC,OAAP,CAAeC,WAAf,CAA2BC,SAA/B,CAAyC,MAAKR,KAA9C,CAAhB;;AAEA,SAAK,IAAIS,GAAT,IAAgB,MAAKT,KAArB,EAA4B;AACxB,UAAI,CAAC,MAAKA,KAAL,CAAWU,cAAX,CAA0BD,GAA1B,CAAL,EAAqC;;AACrC,YAAKE,WAAL,CAAiBF,GAAjB;;AACAJ,MAAAA,MAAM,CAACC,OAAP,CAAeC,WAAf,CAA2BK,MAA3B,CAAkCH,GAAlC,EAAuC,MAAKL,QAA5C;AACH;;AAGDC,IAAAA,MAAM,CAACC,OAAP,CAAeC,WAAf,CAA2BM,QAA3B,CAAoC,YAApC;AAEAR,IAAAA,MAAM,CAACC,OAAP,CAAeQ,WAAf,CAA2BC,aAA3B;AAEA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AAjBe;AAoBlB;;;;gCAGWC,O,EAAS;AAAA;;AACjB,WAAKd,QAAL,CAAce,EAAd,CAAmB,YAAYD,OAA/B,EAAyC,YAAM;AAC3C,QAAA,MAAI,CAACE,QAAL,qBAESF,OAFT,EAEmB,MAAI,CAACd,QAAL,CAAciB,GAAd,CAAkBH,OAAlB,CAFnB;AAIH,OALD;AAMH;;;8BAESI,U,EAAY;AAClB,UAAIC,KAAK,GAAG,KAAKnB,QAAL,CAAciB,GAAd,CAAkBC,UAAlB,CAAZ;AACA,WAAKlB,QAAL,CAAcoB,GAAd,CAAkBF,UAAlB,EAA8BC,KAAK,GAAG,CAAtC;AACH;;;6BAGQ;AAEL;AACA,UAAIE,OAAO,GAAG,IAAd;;AAEA,UAAI,KAAKzB,KAAL,CAAW0B,WAAf,EAA2B;AACvBD,QAAAA,OAAO,GAAG,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAE,KAAKT,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH,OAFD,MAEO,IAAI,KAAKhB,KAAL,CAAW2B,UAAf,EAA2B;AAC9BF,QAAAA,OAAO,GAAG,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACG,YAAAA,eAAe,EAAE;AAAlB,WAAnB;AAA+C,UAAA,KAAK,EAAE,KAAK5B,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH;;AAED,aAAOyB,OAAP;AAEL;;;;EArDe/B,S;;AAwDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './css/App.css'\nimport model from './model/capiModel'\nimport StudentView from './components/StudentView'\nimport AuthorView from \"./components/AuthorView\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = JSON.parse(JSON.stringify(model));\n\n        this.simModel = new window.simcapi.CapiAdapter.CapiModel(this.state);\n\n        for (var key in this.state) {\n            if (!this.state.hasOwnProperty(key)) continue;\n            this.addListener(key);\n            window.simcapi.CapiAdapter.expose(key, this.simModel);\n        }\n\n\n        window.simcapi.CapiAdapter.unexpose('simObjects');\n\n        window.simcapi.Transporter.notifyOnReady();\n\n        this.increment = this.increment.bind(this)\n\n\n    }\n\n\n    addListener(keyName) {\n        this.simModel.on( ('change:' + keyName), () => {\n            this.setState(\n                {\n                    [keyName]: this.simModel.get(keyName)\n                });\n        });\n    }\n\n    increment(objectName) {\n        var count = this.simModel.get(objectName);\n        this.simModel.set(objectName, count + 1);\n    }\n\n\n    render() {\n\n        //TODO: Add state checking using -> simcapi.Transporter.getConfig().context\n        var display = null;\n\n        if (this.state.studentMode){\n            display = <StudentView increment={this.increment}/>\n        } else if (this.state.authorMode) {\n            display = <AuthorView style={{backgroundColor: 'beige'}} state={this.state}/>\n        }\n\n        return display;\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}