{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/src/components/SimViewer.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 14px;\\n  color: white;\\n  font-size: 18px;\\n  text-align: center;\\n  border-radius: 20px;\\n  background-color: tomato;\\n  position: absolute;\\n  top: 85px;\\n  left: 25px;\\n  cursor: pointer;\\n  user-select: none;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport ThreeEntry from \"../scenes/ThreeEntry\";\nimport { getSceneManager } from \"../scenes/SceneManager\";\nimport { getCapiInstance } from \"../utils/CAPI/capi\";\nimport LoadingModels from \"./LoadingModels\";\nvar CanvasContainer = styled.div(_templateObject());\nvar Button = styled.div(_templateObject2());\n\nvar SimViewer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SimViewer, _Component);\n\n  function SimViewer(props) {\n    var _this;\n\n    _classCallCheck(this, SimViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimViewer).call(this, props)); // TODO: Need to test reviewing behavior later\n\n    _this.canvasContainer = React.createRef();\n\n    _this.onClick = function () {\n      _this.sceneManager.resetCamera();\n    };\n\n    _this.state = {\n      increment: _this.props.increment,\n      height: 0,\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(SimViewer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.sceneManager = new ThreeEntry(this.canvasContainer.current).sceneManager;\n      var capi = getCapiInstance();\n      var Transporter = capi.getTransporter();\n      Transporter.addInitialSetupCompleteListener(function () {\n        getSceneManager().onTransporterReady();\n      });\n      Transporter.notifyOnReady();\n    }\n  }, {\n    key: \"whileLoading\",\n    value: function whileLoading() {\n      this.setState({\n        loading: true\n      });\n    }\n  }, {\n    key: \"whileNotLoading\",\n    value: function whileNotLoading() {\n      this.setState({\n        increment: this.props.increment,\n        height: 0,\n        loading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n\n      if (loading == true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(CanvasContainer, {\n          ref: this.canvasContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), \"  \");\n      }\n\n      return React.createElement(CanvasContainer, {\n        ref: this.canvasContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SimViewer;\n}(Component);\n\nexport var getSivView = function getSivView() {\n  return SimViewer.instance || null;\n};\nexport default function (container) {\n  if (!SimViewer.instance) {\n    SimViewer.instance = new SimViewer(container);\n  }\n\n  return SimViewer.instance;\n}","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/group21WildLifeRefuge/src/components/SimViewer.js"],"names":["React","Component","styled","ThreeEntry","getSceneManager","getCapiInstance","LoadingModels","CanvasContainer","div","Button","SimViewer","props","canvasContainer","createRef","onClick","sceneManager","resetCamera","state","increment","height","loading","current","capi","Transporter","getTransporter","addInitialSetupCompleteListener","onTransporterReady","notifyOnReady","setState","getSivView","instance","container"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAMC,eAAe,GAAGL,MAAM,CAACM,GAAV,mBAArB;AAKA,IAAMC,MAAM,GAAGP,MAAM,CAACM,GAAV,oBAAZ;;IAcME,S;;;;;AAEJ,qBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,mFAAMA,KAAN,GADkB,CAGlB;;AAHkB,UADpBC,eACoB,GADFZ,KAAK,CAACa,SAAN,EACE;;AAAA,UAwBpBC,OAxBoB,GAwBV,YAAM;AACd,YAAKC,YAAL,CAAkBC,WAAlB;AACD,KA1BmB;;AAIlB,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,MAAKP,KAAL,CAAWO,SADX;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAJkB;AASnB;;;;wCAEsB;AACrB,WAAKL,YAAL,GAAoB,IAAIZ,UAAJ,CAClB,KAAKS,eAAL,CAAqBS,OADH,EAElBN,YAFF;AAIA,UAAMO,IAAI,GAAGjB,eAAe,EAA5B;AACA,UAAMkB,WAAW,GAAGD,IAAI,CAACE,cAAL,EAApB;AACAD,MAAAA,WAAW,CAACE,+BAAZ,CAA4C,YAAM;AAChDrB,QAAAA,eAAe,GAAGsB,kBAAlB;AACD,OAFD;AAGAH,MAAAA,WAAW,CAACI,aAAZ;AACD;;;mCAMa;AAEZ,WAAKC,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAE;AADG,OAAd;AAID;;;sCAEgB;AAEf,WAAKQ,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAE,KAAKP,KAAL,CAAWO,SADV;AAEZC,QAAAA,MAAM,EAAE,CAFI;AAGZC,QAAAA,OAAO,EAAE;AAHG,OAAd;AAMD;;;6BAES;AAAA,UAEDA,OAFC,GAEU,KAAKH,KAFf,CAEDG,OAFC;;AAGR,UAAGA,OAAO,IAAI,IAAd,EAAmB;AACjB,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACN,oBAAC,eAAD;AAAiB,UAAA,GAAG,EAAE,KAAKR,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,OAAR;AAGD;;AACD,aAAO,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAE,KAAKA,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAzDqBX,S;;AA4DxB,OAAO,IAAM4B,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAOnB,SAAS,CAACoB,QAAV,IAAsB,IAA7B;AACD,CAFM;AAKP,eAAe,UAAUC,SAAV,EAAqB;AAClC,MAAI,CAACrB,SAAS,CAACoB,QAAf,EAAyB;AACvBpB,IAAAA,SAAS,CAACoB,QAAV,GAAqB,IAAIpB,SAAJ,CAAcqB,SAAd,CAArB;AACD;;AACD,SAAOrB,SAAS,CAACoB,QAAjB;AACD","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport ThreeEntry from \"../scenes/ThreeEntry\";\nimport { getSceneManager } from \"../scenes/SceneManager\";\nimport { getCapiInstance } from \"../utils/CAPI/capi\";\nimport LoadingModels from \"./LoadingModels\";\n\nconst CanvasContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n`;\n\nconst Button = styled.div`\n  padding: 14px;\n  color: white;\n  font-size: 18px;\n  text-align: center;\n  border-radius: 20px;\n  background-color: tomato;\n  position: absolute;\n  top: 85px;\n  left: 25px;\n  cursor: pointer;\n  user-select: none;\n`;\n\nclass SimViewer extends Component {\n  canvasContainer = React.createRef()\n  constructor (props) {\n    super(props);\n\n    // TODO: Need to test reviewing behavior later\n    this.state = {\n      increment: this.props.increment,\n      height: 0,\n      loading: true\n    };\n  }\n\n    componentDidMount () {\n    this.sceneManager = new ThreeEntry(\n      this.canvasContainer.current\n    ).sceneManager;\n\n    const capi = getCapiInstance();\n    const Transporter = capi.getTransporter();\n    Transporter.addInitialSetupCompleteListener(() => {\n      getSceneManager().onTransporterReady();\n    });\n    Transporter.notifyOnReady();\n  }\n\n  onClick = () => {\n    this.sceneManager.resetCamera();\n  }\n\n  whileLoading(){\n\n    this.setState({\n      loading: true\n\n    })\n  }\n\n  whileNotLoading(){\n\n    this.setState({\n      increment: this.props.increment,\n      height: 0,\n      loading: false\n\n    })\n  }\n\n  render () {\n\n    const {loading} = this.state;\n    if(loading == true){\n      return( <div>\n        <CanvasContainer ref={this.canvasContainer} />  </div>);\n\n    }\n    return <CanvasContainer ref={this.canvasContainer} />;\n  }\n}\n\nexport const getSivView = () => {\n  return SimViewer.instance || null;\n};\n\n\nexport default function (container) {\n  if (!SimViewer.instance) {\n    SimViewer.instance = new SimViewer(container);\n  }\n  return SimViewer.instance;\n}\n\n"]},"metadata":{},"sourceType":"module"}