{"ast":null,"code":"var random = function random(min, max) {\n  return Math.random() * (max - min) + min;\n};\n\nvar getValue = function getValue() {\n  var accessor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (initial === null) {\n    throw new Error(\"Cannot access \".concat(accessor, \" on null initial value\"));\n  }\n\n  if (accessor === null) {\n    throw new Error(\"Cannot access null property of an object\");\n  }\n\n  return accessor.split(\".\").reduce(function (accum, accessor, i, arr) {\n    var val = accum[accessor];\n    var valueIsLast = arr.length - 1 === i;\n\n    if (valueIsLast) {\n      return val;\n    }\n\n    return val || {};\n  }, initial);\n};\n\nmodule.exports = {\n  random: random,\n  getValue: getValue\n};","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/group21WildLifeRefuge/src/utils/helpers.js"],"names":["random","min","max","Math","getValue","accessor","initial","Error","split","reduce","accum","i","arr","val","valueIsLast","length","module","exports"],"mappings":"AAAA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,SAAOC,IAAI,CAACH,MAAL,MAAiBE,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACD,CAFD;;AAIA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAiC;AAAA,MAAhCC,QAAgC,uEAArB,EAAqB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;;AAChD,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAM,IAAIC,KAAJ,yBAA2BF,QAA3B,4BAAN;AACD;;AACD,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,SAAOF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,MAApB,CAA2B,UAACC,KAAD,EAAQL,QAAR,EAAkBM,CAAlB,EAAqBC,GAArB,EAA6B;AAC7D,QAAMC,GAAG,GAAGH,KAAK,CAACL,QAAD,CAAjB;AACA,QAAMS,WAAW,GAAGF,GAAG,CAACG,MAAJ,GAAa,CAAb,KAAmBJ,CAAvC;;AAEA,QAAIG,WAAJ,EAAiB;AACf,aAAOD,GAAP;AACD;;AAED,WAAOA,GAAG,IAAI,EAAd;AACD,GATM,EASJP,OATI,CAAP;AAUD,CAlBD;;AAoBAU,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,MAAM,EAANA,MADe;AAEfI,EAAAA,QAAQ,EAARA;AAFe,CAAjB","sourcesContent":["const random = (min, max) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst getValue = (accessor = \"\", initial = {}) => {\n  if (initial === null) {\n    throw new Error(`Cannot access ${accessor} on null initial value`);\n  }\n  if (accessor === null) {\n    throw new Error(\"Cannot access null property of an object\");\n  }\n\n  return accessor.split(\".\").reduce((accum, accessor, i, arr) => {\n    const val = accum[accessor];\n    const valueIsLast = arr.length - 1 === i;\n\n    if (valueIsLast) {\n      return val;\n    }\n\n    return val || {};\n  }, initial);\n};\n\nmodule.exports = {\n  random,\n  getValue\n};\n"]},"metadata":{},"sourceType":"module"}