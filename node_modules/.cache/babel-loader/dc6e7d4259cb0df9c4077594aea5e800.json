{"ast":null,"code":"/*\n    Constructor for Western Red Cedar Object\n    @param size         size of the Western Red Cedar object (small, medium, large)\n    @param coneAge      Age of the cones in months for the Western Red Cedar object\n    @param pollinated   boolean value for whether cones have been pollinated or not.\n */\nfunction WesternRedCedar(size, coneAge, pollinated) {\n  this.age;\n  this.diameterFeet;\n  this.heightFeet;\n  this.size;\n  this.leafColor = '#99ff33'; //Lighter Green with Yellow Tint (w3schools colorpicker)\n\n  this.leafLengthInches = Math.random() * 0.039 + 0.157;\n  this.leafBreadthInches = Math.random() * 0.039 + 0.47;\n  this.coneColor = '#9ACD32';\n  this.coneAge = coneAge; //age in months\n\n  this.pollinated = false;\n  this.coneLengthInches = Math.random() * 0.39 * 0.71;\n  this.coneBreadthInches = Math.random() * 0.16 * 0.20;\n  this.coneScales = Math.random() * 8 + 14;\n  this.scientificName = 'Thuja plicata';\n  this.commonName = 'Western Red Cedar'; //Reference: https://en.wikipedia.org/wiki/Thuja_plicata\n\n  if (this.size.toLowerCase() === 'small') {\n    this.heightFeet = Math.random() * 213.0 + 218.7;\n    this.diameterFeet = Math.random() * 9.8 + 10.9;\n  } else if (this.size.toLowerCase() === 'medium') {\n    this.heightFeet = Math.random() * 218.8 + 224.4;\n    this.diameterFeet = Math.random() * 11 + 12;\n  } else if (this.size.toLowerCase() === 'large') {\n    this.heightFeet = Math.random() * 224.5 + 230;\n    this.diameterFeet = Math.random() * 12.1 + 13.1;\n  }\n\n  if (coneAge < 6) {\n    this.coneColor = '#9ACD32';\n  } else if (coneAge >= 6 && pollinated) {\n    this.coneColor = '#996633';\n  }\n}\n\nWesternRedCedar.prototype = {\n  get age() {\n    return this.age;\n  },\n\n  set age(age) {\n    this.age = age;\n  },\n\n  get diameterFeet() {\n    return this.diameterFeet;\n  },\n\n  set diameterFeet(diameter) {\n    this.diameterFeet = diameter;\n  },\n\n  get heightFeet() {\n    return this.heightFeet;\n  },\n\n  set heightFeet(height) {\n    this.heightFeet = height;\n  },\n\n  get scientificName() {\n    return this.scientificName;\n  },\n\n  get commonName() {\n    return this.commonName;\n  },\n\n  get leafColor() {\n    return this.leafColor;\n  },\n\n  set leafColor(color) {\n    this.leafColor = color;\n  },\n\n  get leafLengthInches() {\n    return this.leafLengthInches;\n  },\n\n  get leafBreadthInches() {\n    return this.leafBreadthInches;\n  },\n\n  set coneColor(color) {\n    this.coneColor = color;\n  },\n\n  get coneColor() {\n    return this.coneColor;\n  },\n\n  set coneAge(age) {\n    this.coneAge = age;\n  },\n\n  get coneAge() {\n    return this.coneAge;\n  },\n\n  set pollinated(p) {\n    this.pollinated = p;\n  },\n\n  get pollinated() {\n    return this.pollinated;\n  },\n\n  get coneLengthInches() {\n    return this.coneLengthInches;\n  },\n\n  get coneBreadthInches() {\n    return this.coneBreadthInches;\n  },\n\n  get coneScales() {\n    return this.coneScales;\n  }\n\n};","map":{"version":3,"sources":["/Users/maxwellheller/School/SER401/spr-capi-test/src/js/westernRedCedarTree.js"],"names":["WesternRedCedar","size","coneAge","pollinated","age","diameterFeet","heightFeet","leafColor","leafLengthInches","Math","random","leafBreadthInches","coneColor","coneLengthInches","coneBreadthInches","coneScales","scientificName","commonName","toLowerCase","prototype","diameter","height","color","p"],"mappings":"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","sourcesContent":["/*\n    Constructor for Western Red Cedar Object\n    @param size         size of the Western Red Cedar object (small, medium, large)\n    @param coneAge      Age of the cones in months for the Western Red Cedar object\n    @param pollinated   boolean value for whether cones have been pollinated or not.\n */\nfunction WesternRedCedar(size, coneAge, pollinated) {\n    this.age;\n    this.diameterFeet;\n    this.heightFeet;\n    this.size;\n    this.leafColor = '#99ff33'; //Lighter Green with Yellow Tint (w3schools colorpicker)\n    this.leafLengthInches = (Math.random() * 0.039) + 0.157;\n    this.leafBreadthInches = (Math.random() * 0.039) + 0.47;\n    this.coneColor = '#9ACD32';\n    this.coneAge = coneAge; //age in months\n    this.pollinated = false;\n    this.coneLengthInches = (Math.random() * 0.39) * 0.71;\n    this.coneBreadthInches = (Math.random() * 0.16) * 0.20;\n    this.coneScales = (Math.random() * 8) + 14;\n    this.scientificName = 'Thuja plicata';\n    this.commonName = 'Western Red Cedar';\n\n    //Reference: https://en.wikipedia.org/wiki/Thuja_plicata\n    if (this.size.toLowerCase() === 'small') {\n        this.heightFeet = (Math.random() * 213.0) + 218.7;\n        this.diameterFeet = (Math.random() * 9.8) + 10.9;\n    } else if (this.size.toLowerCase() === 'medium') {\n        this.heightFeet = (Math.random() * 218.8) + 224.4;\n        this.diameterFeet = (Math.random() * 11) + 12;\n    } else if (this.size.toLowerCase() === 'large') {\n        this.heightFeet = (Math.random() * 224.5) + 230;\n        this.diameterFeet = (Math.random() * 12.1) + 13.1;\n    }\n\n    if (coneAge < 6) {\n        this.coneColor = '#9ACD32';\n    } else if (coneAge >= 6 && pollinated) {\n        this.coneColor = '#996633';\n    }\n}\n\nWesternRedCedar.prototype = {\n    get age() {\n        return this.age;\n    },\n\n    set age(age) {\n        this.age = age;\n    },\n\n    get diameterFeet() {\n        return this.diameterFeet;\n    },\n\n    set diameterFeet(diameter) {\n        this.diameterFeet = diameter;\n    },\n\n    get heightFeet() {\n        return this.heightFeet;\n    },\n\n    set heightFeet(height) {\n        this.heightFeet = height;\n    },\n\n    get scientificName() {\n        return this.scientificName;\n    },\n\n    get commonName() {\n        return this.commonName;\n    },\n\n    get leafColor() {\n        return this.leafColor;\n    },\n\n    set leafColor(color) {\n        this.leafColor = color;\n    },\n\n    get leafLengthInches() {\n        return this.leafLengthInches;\n    },\n\n    get  leafBreadthInches() {\n        return this.leafBreadthInches;\n    },\n\n    set coneColor(color) {\n        this.coneColor = color;\n    },\n\n    get coneColor() {\n        return this.coneColor;\n    },\n\n    set coneAge(age) {\n        this.coneAge = age;\n    },\n\n    get coneAge() {\n        return this.coneAge;\n    },\n\n    set pollinated(p) {\n        this.pollinated = p;\n    },\n\n    get pollinated() {\n        return this.pollinated;\n    },\n\n    get coneLengthInches() {\n        return this.coneLengthInches;\n    },\n\n    get coneBreadthInches() {\n        return this.coneBreadthInches;\n    },\n\n    get coneScales() {\n        return this.coneScales;\n    }\n};"]},"metadata":{},"sourceType":"module"}