{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/admin/Documents/GitHub/group21WildLifeRefuge/src/components/StudentView.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  background: papayawhip;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport \"../css/simulation.css\";\nimport SimViewer from \"./SimViewer\";\nimport ViewControl from \"./ViewControl\";\nimport UIBar from \"./UI/UIBar\";\nimport back from \"../assets/back.png\";\nimport forward from \"../assets/forward.png\";\nimport reset from \"../assets/reset.png\";\nimport help from \"../assets/help.png\";\nimport styled from \"styled-components\";\nimport ImgButton from \"./UI/ImgButton\";\nimport ResetButton from \"./UI/ResetButton\";\nimport BalancePopulation from \"./BalancePopulation\";\nimport LoadingModels from \"./LoadingModels\";\nimport GrassField from \"../scenes/GrassField\";\nvar Container = styled.div(_templateObject());\n\nvar StudentView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StudentView, _Component);\n\n  function StudentView(props) {\n    var _this;\n\n    _classCallCheck(this, StudentView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StudentView).call(this, props)); // TODO: Need to test reviewing behavior later\n\n    _this.findUIHeight = function (uiHeight) {\n      _this.setState({\n        height: window.innerHeight - uiHeight\n      });\n    };\n\n    _this.state = {\n      increment: _this.props.increment,\n      height: 0,\n      loading: false\n    }; // Disables increment functionality if in review mode\n    // TODO: Add functionality to disable all UI except possible forward/back buttons\n\n    if (_this.props.hasOwnProperty(\"review\")) {\n      _this.setState({\n        increment: function increment(e) {\n          return console.log(e + \" is disabled\");\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(StudentView, [{\n    key: \"whileLoading\",\n    value: function whileLoading() {\n      this.setState({\n        loading: true\n      });\n    }\n  }, {\n    key: \"whileNotLoading\",\n    value: function whileNotLoading() {\n      this.setState({\n        increment: this.props.increment,\n        height: 0,\n        loading: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      console.log(\"is loading value is ==> \" + loading);\n      var Controls = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ImgButton, {\n        key: \"back\",\n        id: \"back\",\n        src: back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(ImgButton, {\n        key: \"forward\",\n        id: \"forward\",\n        src: forward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(ResetButton, {\n        key: \"reset\",\n        id: \"reset\",\n        src: reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(ImgButton, {\n        key: \"help\",\n        id: \"help\",\n        src: help,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n      /*\n             if(!loading == true)\n             {\n                //return(<LoadingModels/>);\n      \n             }else if (loading == true){  console.log(\"Am I called? \"); */\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(UIBar, {\n        reportHeight: this.findUIHeight,\n        increment: this.state.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), Controls, React.createElement(ViewControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(BalancePopulation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(SimViewer, {\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StudentView;\n}(Component); //export default StudentView;\n\n\nexport var getStudentView = function getStudentView() {\n  return StudentView.instance || null;\n};\nexport default function (container) {\n  if (!StudentView.instance) {\n    StudentView.instance = new StudentView(container);\n  }\n\n  return StudentView.instance;\n}","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/group21WildLifeRefuge/src/components/StudentView.js"],"names":["React","Component","SimViewer","ViewControl","UIBar","back","forward","reset","help","styled","ImgButton","ResetButton","BalancePopulation","LoadingModels","GrassField","Container","div","StudentView","props","findUIHeight","uiHeight","setState","height","window","innerHeight","state","increment","loading","hasOwnProperty","e","console","log","Controls","getStudentView","instance","container"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/simulation.css\";\nimport SimViewer from \"./SimViewer\";\nimport ViewControl from \"./ViewControl\";\nimport UIBar from \"./UI/UIBar\";\nimport back from \"../assets/back.png\";\nimport forward from \"../assets/forward.png\";\nimport reset from \"../assets/reset.png\";\nimport help from \"../assets/help.png\";\nimport styled from \"styled-components\";\nimport ImgButton from \"./UI/ImgButton\";\nimport ResetButton from \"./UI/ResetButton\";\nimport BalancePopulation from \"./BalancePopulation\";\nimport LoadingModels from \"./LoadingModels\";\nimport GrassField from \"../scenes/GrassField\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: papayawhip;\n`;\n\nclass StudentView extends Component {\n  constructor (props) {\n    super(props);\n\n    // TODO: Need to test reviewing behavior later\n    this.state = {\n      increment: this.props.increment,\n      height: 0,\n      loading: false\n    };\n\n    // Disables increment functionality if in review mode\n    // TODO: Add functionality to disable all UI except possible forward/back buttons\n    if (this.props.hasOwnProperty(\"review\")) {\n      this.setState({\n        increment: e => console.log(e + \" is disabled\")\n      });\n    }\n  }\n\n  findUIHeight = uiHeight => {\n    this.setState({ height: window.innerHeight - uiHeight });\n  }\n  whileLoading(){\n      \n      this.setState({\n          loading: true\n\n      })\n  }\n\n    whileNotLoading(){\n\n        this.setState({\n            increment: this.props.increment,\n            height: 0,\n            loading: true\n\n        })\n    }\n  render () {\n\n    const {loading} = this.state;\n    console.log(\"is loading value is ==> \" + loading );\n    const Controls = (\n      <React.Fragment>\n        <ImgButton key='back' id='back' src={back} />\n        <ImgButton key='forward' id='forward' src={forward} />\n        <ResetButton key='reset' id='reset' src={reset} />\n        <ImgButton key='help' id='help' src={help} />\n      </React.Fragment>\n    );\n/*\n       if(!loading == true)\n       {\n          //return(<LoadingModels/>);\n\n       }else if (loading == true){  console.log(\"Am I called? \"); */\n           return (\n\n               <Container>\n                   <UIBar\n                       reportHeight={this.findUIHeight}\n                       increment={this.state.increment}\n                   />\n                   {Controls}\n                   <ViewControl/>\n                   <BalancePopulation/>\n\n                   <SimViewer height={this.state.height}/>\n               </Container>\n           );\n\n\n\n\n    }\n\n}\n\n//export default StudentView;\n\n\nexport const getStudentView = () => {\n    return StudentView.instance || null;\n};\n\n\nexport default function (container) {\n    if (!StudentView.instance) {\n        StudentView.instance = new StudentView(container);\n    }\n    return StudentView.instance;\n}\n"]},"metadata":{},"sourceType":"module"}